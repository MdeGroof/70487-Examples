//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PetServiceClient.CatServiceClient {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/System")]
    public partial class Exception : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlQualifiedName factoryTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        public System.Xml.XmlQualifiedName FactoryType {
            get {
                return this.factoryTypeField;
            }
            set {
                this.factoryTypeField = value;
                this.RaisePropertyChanged("FactoryType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/PetService")]
    public partial class SKitten : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string colorField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
                this.RaisePropertyChanged("color");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class XKitten : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string colorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
                this.RaisePropertyChanged("color");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/PetService")]
    public partial class KittyPoop : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sizeField;
        
        private string smellField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
                this.RaisePropertyChanged("size");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string smell {
            get {
                return this.smellField;
            }
            set {
                this.smellField = value;
                this.RaisePropertyChanged("smell");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CatServiceClient.ICatService")]
    public interface ICatService {
        
        // CODEGEN: Parameter 'speakResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/speak", ReplyAction="http://tempuri.org/ICatService/speakResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PetServiceClient.CatServiceClient.speakResponse speak(PetServiceClient.CatServiceClient.speakRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/speak", ReplyAction="http://tempuri.org/ICatService/speakResponse")]
        System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.speakResponse> speakAsync(PetServiceClient.CatServiceClient.speakRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/haveKitten", ReplyAction="http://tempuri.org/ICatService/haveKittenResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PetServiceClient.CatServiceClient.Kitten haveKitten(PetServiceClient.CatServiceClient.haveKittenRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/haveKitten", ReplyAction="http://tempuri.org/ICatService/haveKittenResponse")]
        System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.Kitten> haveKittenAsync(PetServiceClient.CatServiceClient.haveKittenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/haveXKitten", ReplyAction="http://tempuri.org/ICatService/haveXKittenResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PetServiceClient.CatServiceClient.XKitten haveXKitten();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/haveXKitten", ReplyAction="http://tempuri.org/ICatService/haveXKittenResponse")]
        System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.XKitten> haveXKittenAsync();
        
        // CODEGEN: Parameter 'haveSKittenResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/haveSKitten", ReplyAction="http://tempuri.org/ICatService/haveSKittenResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PetServiceClient.CatServiceClient.haveSKittenResponse haveSKitten(PetServiceClient.CatServiceClient.haveSKittenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/haveSKitten", ReplyAction="http://tempuri.org/ICatService/haveSKittenResponse")]
        System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.haveSKittenResponse> haveSKittenAsync(PetServiceClient.CatServiceClient.haveSKittenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/throwUncaught", ReplyAction="http://tempuri.org/ICatService/throwUncaughtResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void throwUncaught();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/throwUncaught", ReplyAction="http://tempuri.org/ICatService/throwUncaughtResponse")]
        System.Threading.Tasks.Task throwUncaughtAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/throwCaught", ReplyAction="http://tempuri.org/ICatService/throwCaughtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PetServiceClient.CatServiceClient.Exception), Action="http://tempuri.org/ICatService/throwCaughtExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void throwCaught();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/throwCaught", ReplyAction="http://tempuri.org/ICatService/throwCaughtResponse")]
        System.Threading.Tasks.Task throwCaughtAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/throwCustom", ReplyAction="http://tempuri.org/ICatService/throwCustomResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PetServiceClient.CatServiceClient.KittyPoop), Action="http://tempuri.org/ICatService/throwCustomKittyPoopFault", Name="KittyPoop", Namespace="http://schemas.datacontract.org/2004/07/PetService")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void throwCustom();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/throwCustom", ReplyAction="http://tempuri.org/ICatService/throwCustomResponse")]
        System.Threading.Tasks.Task throwCustomAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/taskKitten", ReplyAction="http://tempuri.org/ICatService/taskKittenResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PetServiceClient.CatServiceClient.Kitten taskKitten(PetServiceClient.CatServiceClient.taskKittenRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/taskKitten", ReplyAction="http://tempuri.org/ICatService/taskKittenResponse")]
        System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.Kitten> taskKittenAsync(PetServiceClient.CatServiceClient.taskKittenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/syncKitten", ReplyAction="http://tempuri.org/ICatService/syncKittenResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PetServiceClient.CatServiceClient.Kitten syncKitten(PetServiceClient.CatServiceClient.syncKittenRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatService/syncKitten", ReplyAction="http://tempuri.org/ICatService/syncKittenResponse")]
        System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.Kitten> syncKittenAsync(PetServiceClient.CatServiceClient.syncKittenRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="speak", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class speakRequest {
        
        public speakRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="speakResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class speakResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string speakResult;
        
        public speakResponse() {
        }
        
        public speakResponse(string speakResult) {
            this.speakResult = speakResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class haveKittenRequest {
        
        public haveKittenRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CuteKitty", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Kitten {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string color;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name;
        
        public Kitten() {
        }
        
        public Kitten(string id, string color, string name) {
            this.id = id;
            this.color = color;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="haveSKitten", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class haveSKittenRequest {
        
        public haveSKittenRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="haveSKittenResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class haveSKittenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PetServiceClient.CatServiceClient.SKitten haveSKittenResult;
        
        public haveSKittenResponse() {
        }
        
        public haveSKittenResponse(PetServiceClient.CatServiceClient.SKitten haveSKittenResult) {
            this.haveSKittenResult = haveSKittenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class taskKittenRequest {
        
        public taskKittenRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class syncKittenRequest {
        
        public syncKittenRequest() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICatServiceChannel : PetServiceClient.CatServiceClient.ICatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CatServiceClient : System.ServiceModel.ClientBase<PetServiceClient.CatServiceClient.ICatService>, PetServiceClient.CatServiceClient.ICatService {
        
        public CatServiceClient() {
        }
        
        public CatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PetServiceClient.CatServiceClient.speakResponse PetServiceClient.CatServiceClient.ICatService.speak(PetServiceClient.CatServiceClient.speakRequest request) {
            return base.Channel.speak(request);
        }
        
        public string speak() {
            PetServiceClient.CatServiceClient.speakRequest inValue = new PetServiceClient.CatServiceClient.speakRequest();
            PetServiceClient.CatServiceClient.speakResponse retVal = ((PetServiceClient.CatServiceClient.ICatService)(this)).speak(inValue);
            return retVal.speakResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.speakResponse> PetServiceClient.CatServiceClient.ICatService.speakAsync(PetServiceClient.CatServiceClient.speakRequest request) {
            return base.Channel.speakAsync(request);
        }
        
        public System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.speakResponse> speakAsync() {
            PetServiceClient.CatServiceClient.speakRequest inValue = new PetServiceClient.CatServiceClient.speakRequest();
            return ((PetServiceClient.CatServiceClient.ICatService)(this)).speakAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PetServiceClient.CatServiceClient.Kitten PetServiceClient.CatServiceClient.ICatService.haveKitten(PetServiceClient.CatServiceClient.haveKittenRequest request) {
            return base.Channel.haveKitten(request);
        }
        
        public string haveKitten(out string color, out string name) {
            PetServiceClient.CatServiceClient.haveKittenRequest inValue = new PetServiceClient.CatServiceClient.haveKittenRequest();
            PetServiceClient.CatServiceClient.Kitten retVal = ((PetServiceClient.CatServiceClient.ICatService)(this)).haveKitten(inValue);
            color = retVal.color;
            name = retVal.name;
            return retVal.id;
        }
        
        public System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.Kitten> haveKittenAsync(PetServiceClient.CatServiceClient.haveKittenRequest request) {
            return base.Channel.haveKittenAsync(request);
        }
        
        public PetServiceClient.CatServiceClient.XKitten haveXKitten() {
            return base.Channel.haveXKitten();
        }
        
        public System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.XKitten> haveXKittenAsync() {
            return base.Channel.haveXKittenAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PetServiceClient.CatServiceClient.haveSKittenResponse PetServiceClient.CatServiceClient.ICatService.haveSKitten(PetServiceClient.CatServiceClient.haveSKittenRequest request) {
            return base.Channel.haveSKitten(request);
        }
        
        public PetServiceClient.CatServiceClient.SKitten haveSKitten() {
            PetServiceClient.CatServiceClient.haveSKittenRequest inValue = new PetServiceClient.CatServiceClient.haveSKittenRequest();
            PetServiceClient.CatServiceClient.haveSKittenResponse retVal = ((PetServiceClient.CatServiceClient.ICatService)(this)).haveSKitten(inValue);
            return retVal.haveSKittenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.haveSKittenResponse> PetServiceClient.CatServiceClient.ICatService.haveSKittenAsync(PetServiceClient.CatServiceClient.haveSKittenRequest request) {
            return base.Channel.haveSKittenAsync(request);
        }
        
        public System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.haveSKittenResponse> haveSKittenAsync() {
            PetServiceClient.CatServiceClient.haveSKittenRequest inValue = new PetServiceClient.CatServiceClient.haveSKittenRequest();
            return ((PetServiceClient.CatServiceClient.ICatService)(this)).haveSKittenAsync(inValue);
        }
        
        public void throwUncaught() {
            base.Channel.throwUncaught();
        }
        
        public System.Threading.Tasks.Task throwUncaughtAsync() {
            return base.Channel.throwUncaughtAsync();
        }
        
        public void throwCaught() {
            base.Channel.throwCaught();
        }
        
        public System.Threading.Tasks.Task throwCaughtAsync() {
            return base.Channel.throwCaughtAsync();
        }
        
        public void throwCustom() {
            base.Channel.throwCustom();
        }
        
        public System.Threading.Tasks.Task throwCustomAsync() {
            return base.Channel.throwCustomAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PetServiceClient.CatServiceClient.Kitten PetServiceClient.CatServiceClient.ICatService.taskKitten(PetServiceClient.CatServiceClient.taskKittenRequest request) {
            return base.Channel.taskKitten(request);
        }
        
        public string taskKitten(out string color, out string name) {
            PetServiceClient.CatServiceClient.taskKittenRequest inValue = new PetServiceClient.CatServiceClient.taskKittenRequest();
            PetServiceClient.CatServiceClient.Kitten retVal = ((PetServiceClient.CatServiceClient.ICatService)(this)).taskKitten(inValue);
            color = retVal.color;
            name = retVal.name;
            return retVal.id;
        }
        
        public System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.Kitten> taskKittenAsync(PetServiceClient.CatServiceClient.taskKittenRequest request) {
            return base.Channel.taskKittenAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PetServiceClient.CatServiceClient.Kitten PetServiceClient.CatServiceClient.ICatService.syncKitten(PetServiceClient.CatServiceClient.syncKittenRequest request) {
            return base.Channel.syncKitten(request);
        }
        
        public string syncKitten(out string color, out string name) {
            PetServiceClient.CatServiceClient.syncKittenRequest inValue = new PetServiceClient.CatServiceClient.syncKittenRequest();
            PetServiceClient.CatServiceClient.Kitten retVal = ((PetServiceClient.CatServiceClient.ICatService)(this)).syncKitten(inValue);
            color = retVal.color;
            name = retVal.name;
            return retVal.id;
        }
        
        public System.Threading.Tasks.Task<PetServiceClient.CatServiceClient.Kitten> syncKittenAsync(PetServiceClient.CatServiceClient.syncKittenRequest request) {
            return base.Channel.syncKittenAsync(request);
        }
    }
}
